@function pem($px, $base: $font-size--base) {
  @return calc($px / $base) + em;
}

@function rem($px, $base: $font-size--base) {
  @return calc($px / $base) + rem;
}

/* @mixin breakpoint($min, $max: 0) {
  @if $max == 0 {
    @media ( min-width: rem($min) ) {
      @content
    }
  } @else {
    @media ( min-width: rem($min) ) and ( max-width: rem($max) ) {
      @content
    }
  }
}; */

@mixin breakpoint($min_width : 0, $max_width: 0, $min_height: 0, $max_height: 0) {

  @if $max_width == 0 and $min_height == 0 and $max_height == 0 {
    @media ( min-width: rem($min_width) ) {
      @content
    } 
  }
  @else if $min_height == 0 and $max_height == 0 {
    @media ( min-width: rem($min_width) ) and ( max-width: rem($max_width) ) {
      @content
    }
  }
  @else if $min_width == 0 and $max_width == 0 and $max_height == 0 {
    @media ( min-height: rem($min_height)) {
      @content
    }
  }
  @else if $min_width == 0 and $max_width == 0 {
    @media ( min-height: rem($min_height) ) and ( max-height: rem($max_height) ) {
      @content
    }
  }
  @else if $max_width == 0 and $min_height == 0 {
    @media ( min-width: rem($min_width) ) and ( max-height: rem($max_height) ) {
      @content
    }
  }
  @else if $max_width == 0 and $max_height == 0 {
    @media ( min-width: rem($min_width) ) and ( min-height: rem($min_height) )
    {
      @content 
    }
  }
  @else {
    @media ( min-width: rem($min_width) ) and ( max-width: rem($max_width) ) and ( min-height: rem($min_height) ) and ( max-height: rem($max_height) ) {
      @content
    }
  }
}

@mixin hidden {
  display: none;
  visibility: hidden;
}



.hidden {
  @include hidden;
}


@mixin show {
  display: block;
  visibility: visible;
}

.show {
  @include show;
}
